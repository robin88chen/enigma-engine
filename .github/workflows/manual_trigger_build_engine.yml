name: Manual Build Engine üê±‚Äçüë§
#get config & platform information
on:
  workflow_dispatch:
    inputs:
      config:
        description: 'Configuration of'
        required: true
        default: 'Debug'
        type: choice
        options:
          - Debug
          - Release
      platform:
        description: 'Build for platform'
        required: true
        default: 'x64'
        type: choice
        options:
          - x64
          - ARM64

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./Enigma

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  #BUILD_CONFIGURATION: Debug

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    #strategy:
    #  matrix:
    #    config : [Debug, Release]
    #    platform : [x64, ARM64]

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build Engine
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{inputs.config}} /p:platform=${{inputs.platform}} ${{env.SOLUTION_FILE_PATH}}
    - uses: actions/upload-artifact@v4
      with:
        name: build-${{inputs.config}}-${{inputs.platform}}
        path: ${{env.SOLUTION_FILE_PATH}}/${{inputs.platform}}/${{inputs.config}}/*.[lib,a]
